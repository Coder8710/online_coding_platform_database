---Unnormalized table
CREATE TABLE Unnormalized (
    user_id INT,                       
    Name VARCHAR(100),
    email_id VARCHAR(100),
    password VARCHAR(100),
    total_problems INT,
    sub_id VARCHAR(100),              
    sub_title VARCHAR(255),
    sub_amount VARCHAR(100),
    pay_id VARCHAR(100),
    pay_method VARCHAR(255)
);

---Insertion into Unnormalized table
INSERT INTO Unnormalized (user_id, Name, email_id, password, total_problems, sub_id, sub_title, sub_amount, pay_id, pay_method) VALUES
(1, 'Amit', 'amit@example.com', 'pass123', 10, '1,2', 'Basic Plan, Standard Plan', '100,200', '1,2', 'Credit Card, PayPal'),
(2, 'Priya', 'priya@example.com', 'securepass', 15, '2,3', 'Standard Plan, Premium Plan', '200,300', '3,4', 'Debit Card, Net Banking');

----table after applying 1NF
CREATE TABLE Users_1NF (
    user_id INT,
    Name VARCHAR(100),
    email_id VARCHAR(100),
    password VARCHAR(100),
    total_problems INT,
    sub_id INT,  
    sub_title VARCHAR(100),
    sub_amount INT,
    pay_id INT,
    pay_method VARCHAR(50),
    primary key(user_id,pay_id)
);

---Insertion for 1NF table
INSERT INTO Users_1NF (user_id, Name, email_id, password, total_problems, sub_id, sub_title, sub_amount, pay_id, pay_method) VALUES
(1, 'Amit', 'amit@example.com', 'pass123', 10, 1, 'Basic Plan', 100, 1, 'Credit Card'),
(1, 'Amit', 'amit@example.com', 'pass123', 10, 2, 'Standard Plan', 200, 2, 'PayPal'),
(2, 'Priya', 'priya@example.com', 'securepass', 15, 2, 'Standard Plan', 200, 3, 'Debit Card'),
(2, 'Priya', 'priya@example.com', 'securepass', 15, 3, 'Premium Plan', 300, 4, 'Net Banking');

----table after applying 2NF
-- Users Table
CREATE TABLE Users_2NF (
    user_id INT PRIMARY KEY, 
    Name VARCHAR(100),
    email_id VARCHAR(100) UNIQUE,
    password VARCHAR(100),
    total_problems INT
);

-- Subscriptions Table
CREATE TABLE Subscriptions (
    sub_id INT PRIMARY KEY, 
    sub_title VARCHAR(100),
    sub_amount INT
);

-- User-Subscription Relationship
CREATE TABLE User_Subscriptions (
    user_id INT,
    sub_id INT,
    PRIMARY KEY (user_id, sub_id), 
    FOREIGN KEY (user_id) REFERENCES Users_2NF(user_id),
    FOREIGN KEY (sub_id) REFERENCES Subscriptions(sub_id)
);

INSERT INTO Users_2NF (user_id, Name, email_id, password, total_problems) VALUES
(1, 'Amit', 'amit@example.com', 'pass123', 10),
(2, 'Priya', 'priya@example.com', 'securepass', 15);

INSERT INTO Subscriptions (sub_id, sub_title, sub_amount) VALUES
(1, 'Basic Plan', 100),
(2, 'Standard Plan', 200),
(3, 'Premium Plan', 300);

INSERT INTO User_Subscriptions (user_id, sub_id) VALUES
(1, 1),
(1, 2),
(2, 2),
(2, 3);

-----Create table payments_2NF
CREATE TABLE Payments_2NF (
    pay_id INT PRIMARY KEY, 
    user_id INT,
    sub_id INT,
    pay_method VARCHAR(50),
    FOREIGN KEY (user_id) REFERENCES Users_2NF(user_id),
    FOREIGN KEY (sub_id) REFERENCES Subscriptions(sub_id)
);

INSERT INTO Payments_2NF (pay_id, user_id, sub_id, pay_method) VALUES
(1, 1, 1, 'Credit Card'),
(2, 1, 2, 'PayPal'),
(3, 2, 2, 'Debit Card'),
(4, 2, 3, 'Net Banking');


----table for creating 3NF
-- Payments Table (Without pay_method)
CREATE TABLE Payments_3NF (
    pay_id INT PRIMARY KEY, 
    user_id INT,
    sub_id INT,
    FOREIGN KEY (user_id) REFERENCES Users_2NF(user_id),
    FOREIGN KEY (sub_id) REFERENCES Subscriptions(sub_id)
);

-- Payment Methods Table
CREATE TABLE Payment_Methods (
    pay_id INT PRIMARY KEY, 
    pay_method VARCHAR(50),
    FOREIGN KEY (pay_id) REFERENCES Payments_3NF(pay_id)
);

-- Insert data into Payments_3NF table
INSERT INTO Payments_3NF (pay_id, user_id, sub_id) VALUES
(1, 1, 1),
(2, 1, 2),
(3, 2, 2),
(4, 2, 3);

-- Insert data into Payment_Methods table
INSERT INTO Payment_Methods (pay_id, pay_method) VALUES
(1, 'Credit Card'),
(2, 'PayPal'),
(3, 'Debit Card'),
(4, 'Net Banking');

